[[- if or (.Capabilities.APIVersions.Has "external-secrets.io/v1alpha1/SecretStore") (.Capabilities.APIVersions.Has "external-secrets.io/v1beta1/SecretStore") ]]
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: restrict-external-secrets-secret-store-service-accounts
spec:
  background: true
  failurePolicy: Fail
  rules:
    - match:
        any:
          - resources:
              kinds:
                - SecretStore
      name: validate-service-account-namespace
      validate:
        message: SecretStore cannot use giantswarm namespaced service accounts for kubernetes provider.
        pattern:
          spec:
            =(provider):
              =(kubernetes):
                =(auth):
                  # This is for v1beta1
                  =(serviceAccount):
                    namespace: "!*giantswarm*"
                    # This is for v1alpha1
                    =(serviceAccount):
                      namespace: "!*giantswarm*"
  validationFailureAction: enforce
[[- end ]]

# This must be separate, because ClusterSecretStore is optional to install in `external-secrets`
[[- if or (.Capabilities.APIVersions.Has "external-secrets.io/v1alpha1/ClusterSecretStore") (.Capabilities.APIVersions.Has "external-secrets.io/v1beta1/ClusterSecretStore") ]]
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: restrict-external-secrets-cluster-secret-store-service-accounts
spec:
  background: true
  failurePolicy: Fail
  rules:
    - match:
        any:
          - resources:
              kinds:
                - ClusterSecretStore
      name: validate-service-account-namespace
      validate:
        message: ClusterSecretStore cannot use giantswarm namespaced service accounts for kubernetes provider.
        pattern:
          spec:
            =(provider):
              =(kubernetes):
                =(auth):
                  # This is for v1beta1
                  =(serviceAccount):
                    namespace: "!*giantswarm*"
                    # This is for v1alpha1
                    =(serviceAccount):
                      namespace: "!*giantswarm*"
  validationFailureAction: enforce
[[- end ]]
