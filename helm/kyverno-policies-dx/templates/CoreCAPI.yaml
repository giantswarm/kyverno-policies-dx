# THIS FILE IS GENERATED WITH 'make generate' - DO NOT EDIT MANUALLY
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: core-capi-policy
spec:
  background: false
  rules:
  - name: cluster-label
    match:
      resources:
        kinds:
        - cluster.x-k8s.io/v1alpha3/Cluster
        - cluster.x-k8s.io/v1alpha4/Cluster
        - cluster.x-k8s.io/v1beta1/Cluster
    preconditions:
      any:
      - key: "{{ `{{` }} request.object.metadata.labels.\"release.giantswarm.io/version\" {{ `}}` }}"
        operator: Equals
        value: "20.0.0*"
    mutate:
      patchStrategicMerge:
        metadata:
          labels:
            +(cluster.x-k8s.io/watch-filter): "capi"
            cluster.x-k8s.io/watch-filter: "capi"
            +(cluster-apps-operator.giantswarm.io/watching): ""
            cluster-apps-operator.giantswarm.io/watching: ""

  # cluster-default adds default values to fields in a Cluster CR if it has the watch-filter label and the values are completely missing.
  - name: cluster-default
    match:
      resources:
        kinds:
        - cluster.x-k8s.io/v1alpha3/Cluster
        - cluster.x-k8s.io/v1alpha4/Cluster
        - cluster.x-k8s.io/v1beta1/Cluster
        selector:
          matchLabels:
            cluster.x-k8s.io/watch-filter: capi
    mutate:
      patchStrategicMerge:
        metadata:
          annotations:
            # Create values if missing
            +(cluster.giantswarm.io/description): {{ .Values.clusterDescription }}

  # cluster-default-empty-string adds default values to fields in a Cluster CR if it has the watch-filter label and the values are empty strings.
  - name: cluster-default-empty-string
    match:
      resources:
        kinds:
        - cluster.x-k8s.io/v1alpha3/Cluster
        - cluster.x-k8s.io/v1alpha4/Cluster
        - cluster.x-k8s.io/v1beta1/Cluster
        selector:
          matchLabels:
            cluster.x-k8s.io/watch-filter: capi
    mutate:
      patchStrategicMerge:
        metadata:
          annotations:
            # Replace empty strings
            cluster.giantswarm.io/description: |-
              {{ `{{` }} regex_replace_all('^$', '{{ `{{` }}@{{ `}}` }}', '{{ .Values.clusterDescription }}') {{ `}}` }}

  - name: core-label
    match:
      resources:
        kinds:
        - addons.cluster.x-k8s.io/v1alpha3/ClusterResourceSet
        - addons.cluster.x-k8s.io/v1alpha4/ClusterResourceSet
        - addons.cluster.x-k8s.io/v1beta1/ClusterResourceSet
        - addons.cluster.x-k8s.io/v1alpha3/ClusterResourceSetBinding
        - addons.cluster.x-k8s.io/v1alpha4/ClusterResourceSetBinding
        - addons.cluster.x-k8s.io/v1beta1/ClusterResourceSetBinding
        - bootstrap.cluster.x-k8s.io/v1alpha3/KubeadmConfig
        - bootstrap.cluster.x-k8s.io/v1alpha4/KubeadmConfig
        - bootstrap.cluster.x-k8s.io/v1beta1/KubeadmConfig
        - bootstrap.cluster.x-k8s.io/v1alpha3/KubeadmConfigTemplate
        - bootstrap.cluster.x-k8s.io/v1alpha4/KubeadmConfigTemplate
        - bootstrap.cluster.x-k8s.io/v1beta1/KubeadmConfigTemplate
        - controlplane.cluster.x-k8s.io/v1alpha3/KubeadmControlPlane
        - controlplane.cluster.x-k8s.io/v1alpha4/KubeadmControlPlane
        - controlplane.cluster.x-k8s.io/v1beta1/KubeadmControlPlane
        - cluster.x-k8s.io/v1alpha3/Machine
        - cluster.x-k8s.io/v1alpha4/Machine
        - cluster.x-k8s.io/v1beta1/Machine
        - cluster.x-k8s.io/v1alpha3/MachineSet
        - cluster.x-k8s.io/v1alpha4/MachineSet
        - cluster.x-k8s.io/v1beta1/MachineSet
        - cluster.x-k8s.io/v1alpha3/MachineDeployment
        - cluster.x-k8s.io/v1alpha4/MachineDeployment
        - cluster.x-k8s.io/v1beta1/MachineDeployment
        - exp.cluster.x-k8s.io/v1alpha3/MachinePool
        - cluster.x-k8s.io/v1alpha4/MachinePool
        - cluster.x-k8s.io/v1beta1/MachinePool
    exclude:
      resources:
        selector:
          matchLabels:
            cluster.x-k8s.io/watch-filter: capi
    context:
    - name: releaseVersion
      apiCall:
        urlPath: "/apis/cluster.x-k8s.io/v1alpha3/namespaces/{{ `{{` }} request.object.metadata.namespace {{ `}}` }}/clusters"
        jmesPath: "items[?metadata.name == '{{ `{{` }}request.object.metadata.labels.\"cluster.x-k8s.io/cluster-name\"{{ `}}` }}'].metadata.labels.\"release.giantswarm.io/version\" | [0]"
    preconditions:
      any:
      - key: "{{ `{{` }} releaseVersion {{ `}}` }}"
        operator: Equals
        value: "20.0.0*"
    mutate:
      patchStrategicMerge:
        metadata:
          labels:
            +(cluster.x-k8s.io/watch-filter): "capi"
            cluster.x-k8s.io/watch-filter: "capi"

  - name: kubeadmconfigtemplate-worker-defaults
    match:
      resources:
        kinds:
        - bootstrap.cluster.x-k8s.io/v1alpha3/KubeadmConfigTemplate
        - bootstrap.cluster.x-k8s.io/v1alpha4/KubeadmConfigTemplate
        - bootstrap.cluster.x-k8s.io/v1beta1/KubeadmConfigTemplate
        selector:
          matchLabels:
            cluster.x-k8s.io/watch-filter: capi
    context:
    - name: dictionary
      configMap:
        name: kyverno-policies-data
        namespace: default
    preconditions:
      any:
      - key: "cluster.x-k8s.io/control-plane"
        operator: NotIn
        value: "{{ `{{` }} request.object.metadata.labels | keys(@) {{ `}}` }}"
    mutate:
      patchStrategicMerge:
        spec:
          template:
            spec:
              joinConfiguration:
                nodeRegistration:
                  kubeletExtraArgs:
                    healthz-bind-address: 0.0.0.0
                    node-labels: role=worker
                    node-ip: '{{ `{{` }} dictionary.data.nodeip {{ `}}` }}'

  - name: kubeadmconfig-worker-defaults
    match:
      resources:
        kinds:
        - bootstrap.cluster.x-k8s.io/v1alpha3/KubeadmConfig
        - bootstrap.cluster.x-k8s.io/v1alpha4/KubeadmConfig
        - bootstrap.cluster.x-k8s.io/v1beta1/KubeadmConfig
        selector:
          matchLabels:
            cluster.x-k8s.io/watch-filter: capi
    context:
    - name: dictionary
      configMap:
        name: kyverno-policies-data
        namespace: default
    preconditions:
      any:
      - key: "cluster.x-k8s.io/control-plane"
        operator: NotIn
        value: "{{ `{{` }} request.object.metadata.labels | keys(@) {{ `}}` }}"
    mutate:
      patchStrategicMerge:
        spec:
          joinConfiguration:
            nodeRegistration:
              kubeletExtraArgs:
                healthz-bind-address: 0.0.0.0
                node-ip: '{{ `{{` }} dictionary.data.nodeip {{ `}}` }}'

  - name: kubeadmconfig-worker-merge-labels
    match:
      resources:
        kinds:
          - bootstrap.cluster.x-k8s.io/v1alpha3/KubeadmConfig
          - bootstrap.cluster.x-k8s.io/v1alpha4/KubeadmConfig
          - bootstrap.cluster.x-k8s.io/v1beta1/KubeadmConfig
        selector:
          matchLabels:
            cluster.x-k8s.io/watch-filter: capi
    preconditions:
      all:
        - key: "cluster.x-k8s.io/control-plane"
          operator: NotIn
          value: "{{ `{{` }} request.object.metadata.labels | keys(@) {{ `}}` }}"
        - key: "node-labels"
          operator: In
          value: "{{ `{{` }} request.object.spec.joinConfiguration.nodeRegistration.kubeletExtraArgs | keys(@) {{ `}}` }}"
        - key: "{{ `{{` }} request.object.spec.joinConfiguration.nodeRegistration.kubeletExtraArgs.\"node-labels\" {{ `}}` }}"
          operator: NotEquals
          value: "*role=*"
    mutate:
      patchStrategicMerge:
        spec:
          joinConfiguration:
            nodeRegistration:
              kubeletExtraArgs:
                node-labels: "{{ `{{` }} join(',', ['role=worker', request.object.spec.joinConfiguration.nodeRegistration.kubeletExtraArgs.\"node-labels\"]) {{ `}}` }}"

  - name: kubeadmconfig-worker-default-labels
    match:
      resources:
        kinds:
          - bootstrap.cluster.x-k8s.io/v1alpha3/KubeadmConfig
          - bootstrap.cluster.x-k8s.io/v1alpha4/KubeadmConfig
          - bootstrap.cluster.x-k8s.io/v1beta1/KubeadmConfig
        selector:
          matchLabels:
            cluster.x-k8s.io/watch-filter: capi
    preconditions:
      all:
        - key: "cluster.x-k8s.io/control-plane"
          operator: NotIn
          value: "{{ `{{` }} request.object.metadata.labels | keys(@) {{ `}}` }}"
    mutate:
      patchStrategicMerge:
        spec:
          joinConfiguration:
            nodeRegistration:
              kubeletExtraArgs:
                +(node-labels): role=worker
                +(v): "2"
                +(image-pull-progress-deadline): "{{ .Values.Installation.V1.Guest.Kubernetes.Kubelet.ImagePullProgressDeadline }}"

  - name: kubeadmcontrolplane-defaults
    match:
      resources:
        kinds:
        - controlplane.cluster.x-k8s.io/v1alpha3/KubeadmControlPlane
        - controlplane.cluster.x-k8s.io/v1alpha4/KubeadmControlPlane
        - controlplane.cluster.x-k8s.io/v1beta1/KubeadmControlPlane
        selector:
          matchLabels:
            cluster.x-k8s.io/watch-filter: capi
    context:
    - name: dictionary
      configMap:
        name: kyverno-policies-data
        namespace: default
    mutate:
      patchStrategicMerge:
        spec:
          kubeadmConfigSpec:
            clusterConfiguration:
              controllerManager:
                extraArgs:
                  bind-address: 0.0.0.0
              scheduler:
                extraArgs:
                  bind-address: 0.0.0.0
              apiServer:
                extraArgs:
                  audit-log-maxage: "30"
                  audit-log-maxbackup: "30"
                  audit-log-maxsize: "100"
                  audit-log-path: "/var/log/apiserver/audit.log"
                  audit-policy-file: "/etc/kubernetes/policies/audit-policy.yaml"
                  # encryption-provider-config: "/etc/kubernetes/encryption/k8s-encryption-config.yaml"
                  service-account-lookup: "true"
                  enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,ResourceQuota,DefaultStorageClass,PersistentVolumeClaimResize,Priority,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook"
                  kubelet-preferred-address-types: "InternalIP"
                  +(profiling): "false"
                  +(tls-cipher-suites): "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256"
                  +(runtime-config): "api/all=true,scheduling.k8s.io/v1alpha1=true"
                  +(feature-gates): "TTLAfterFinished=true"
            initConfiguration:
              nodeRegistration:
                kubeletExtraArgs:
                  healthz-bind-address: 0.0.0.0
                  node-ip: "{{ `{{` }} dictionary.data.nodeip {{ `}}` }}"
                  +(v): "2"
                  +(image-pull-progress-deadline): "{{ .Values.Installation.V1.Guest.Kubernetes.Kubelet.ImagePullProgressDeadline }}"

  - name: kubeadmcontrolplane-extravolumes-apiserver-policies
    match:
      resources:
        kinds:
          - controlplane.cluster.x-k8s.io/v1alpha3/KubeadmControlPlane
          - controlplane.cluster.x-k8s.io/v1alpha4/KubeadmControlPlane
          - controlplane.cluster.x-k8s.io/v1beta1/KubeadmControlPlane
        selector:
          matchLabels:
            cluster.x-k8s.io/watch-filter: capi
    preconditions:
      any:
        - key: "/etc/kubernetes/policies"
          operator: NotIn
          value: "{{ `{{` }}request.object.spec.kubeadmConfigSpec.clusterConfiguration.apiServer.extraVolumes[].hostPath{{ `}}` }}"
    mutate:
      patchesJson6902: |-
        - op: add
          path: "/spec/kubeadmConfigSpec/clusterConfiguration/apiServer/extraVolumes/-"
          value: {"hostPath":"/etc/kubernetes/policies","mountPath":"/etc/kubernetes/policies","readOnly":true,"name":"audit-policy"}

  - name: kubeadmcontrolplane-extravolumes-apiserver-logs
    match:
      resources:
        kinds:
          - controlplane.cluster.x-k8s.io/v1alpha3/KubeadmControlPlane
          - controlplane.cluster.x-k8s.io/v1alpha4/KubeadmControlPlane
          - controlplane.cluster.x-k8s.io/v1beta1/KubeadmControlPlane
        selector:
          matchLabels:
            cluster.x-k8s.io/watch-filter: capi
    preconditions:
      any:
        - key: "/var/log/apiserver"
          operator: NotIn
          value: "{{ `{{` }}request.object.spec.kubeadmConfigSpec.clusterConfiguration.apiServer.extraVolumes[].hostPath{{ `}}` }}"
    mutate:
      patchesJson6902: |-
        - op: add
          path: "/spec/kubeadmConfigSpec/clusterConfiguration/apiServer/extraVolumes/-"
          value: {"hostPath":"/var/log/apiserver","mountPath":"/var/log/apiserver","name":"apiserver-log"}

  - name: kubeadmcontrolplane-merge-runtimeconfig-apiall-flags
    match:
      resources:
        kinds:
        - controlplane.cluster.x-k8s.io/v1alpha3/KubeadmControlPlane
        - controlplane.cluster.x-k8s.io/v1alpha4/KubeadmControlPlane
        - controlplane.cluster.x-k8s.io/v1beta1/KubeadmControlPlane
        selector:
          matchLabels:
            cluster.x-k8s.io/watch-filter: capi
    preconditions:
      any:
      - key: "{{ `{{` }}request.object.spec.kubeadmConfigSpec.clusterConfiguration.apiServer.extraArgs.\"runtime-config\"{{ `}}` }}"
        operator: NotEquals
        value: "*api/all=*"
    mutate:
      patchStrategicMerge:
        spec:
          kubeadmConfigSpec:
            clusterConfiguration:
              apiServer:
                extraArgs:
                  runtime-config: "{{ `{{` }} join(',', ['api/all=true', request.object.spec.kubeadmConfigSpec.clusterConfiguration.apiServer.extraArgs.\"runtime-config\"]) {{ `}}` }}"

  - name: kubeadmcontrolplane-merge-runtimeconfig-scheduling-flags
    match:
      resources:
        kinds:
        - controlplane.cluster.x-k8s.io/v1alpha3/KubeadmControlPlane
        - controlplane.cluster.x-k8s.io/v1alpha4/KubeadmControlPlane
        - controlplane.cluster.x-k8s.io/v1beta1/KubeadmControlPlane
        selector:
          matchLabels:
            cluster.x-k8s.io/watch-filter: capi
    preconditions:
      any:
      - key: "{{ `{{` }}request.object.spec.kubeadmConfigSpec.clusterConfiguration.apiServer.extraArgs.\"runtime-config\"{{ `}}` }}"
        operator: NotEquals
        value: "*scheduling.k8s.io/v1alpha1=*"
    mutate:
      patchStrategicMerge:
        spec:
          kubeadmConfigSpec:
            clusterConfiguration:
              apiServer:
                extraArgs:
                  runtime-config: "{{ `{{` }} join(',', ['scheduling.k8s.io/v1alpha1=true', request.object.spec.kubeadmConfigSpec.clusterConfiguration.apiServer.extraArgs.\"runtime-config\"]) {{ `}}` }}"


  - name: kubeadmcontrolplane-merge-featuregates-flags
    match:
      resources:
        kinds:
        - controlplane.cluster.x-k8s.io/v1alpha3/KubeadmControlPlane
        - controlplane.cluster.x-k8s.io/v1alpha4/KubeadmControlPlane
        - controlplane.cluster.x-k8s.io/v1beta1/KubeadmControlPlane
        selector:
          matchLabels:
            cluster.x-k8s.io/watch-filter: capi
    preconditions:
      any:
      - key: "{{ `{{` }}request.object.spec.kubeadmConfigSpec.clusterConfiguration.apiServer.extraArgs.\"feature-gates\"{{ `}}` }}"
        operator: NotEquals
        value: "*TTLAfterFinished=*"
    mutate:
      patchStrategicMerge:
        spec:
          kubeadmConfigSpec:
            clusterConfiguration:
              apiServer:
                extraArgs:
                  feature-gates: "{{ `{{` }} join(',', ['TTLAfterFinished=true', request.object.spec.kubeadmConfigSpec.clusterConfiguration.apiServer.extraArgs.\"feature-gates\"]) {{ `}}` }}"

  - name: kubeadmcontrolplane-audit-policy-file
    match:
      resources:
        kinds:
        - controlplane.cluster.x-k8s.io/v1alpha3/KubeadmControlPlane
        - controlplane.cluster.x-k8s.io/v1alpha4/KubeadmControlPlane
        - controlplane.cluster.x-k8s.io/v1beta1/KubeadmControlPlane
        selector:
          matchLabels:
            cluster.x-k8s.io/watch-filter: capi
    preconditions:
      any:
      - key: "/etc/kubernetes/policies/audit-policy.yaml"
        operator: NotIn
        value: "{{ `{{` }}request.object.spec.kubeadmConfigSpec.files[].path{{ `}}` }}"
    mutate:
      patchesJson6902: |-
        - op: add
          path: "/spec/kubeadmConfigSpec/files/-"
          value: {"encoding":"base64","owner":"root","path":"/etc/kubernetes/policies/audit-policy.yaml","permissions":"644","content":"YXBpVmVyc2lvbjogYXVkaXQuazhzLmlvL3YxCmtpbmQ6IFBvbGljeQpydWxlczoKICAjIFRoZSBmb2xsb3dpbmcgcmVxdWVzdHMgd2VyZSBtYW51YWxseSBpZGVudGlmaWVkIGFzIGhpZ2gtdm9sdW1lIGFuZCBsb3ctcmlzaywKICAjIHNvIGRyb3AgdGhlbS4KICAtIGxldmVsOiBOb25lCiAgICB1c2VyczogWyJzeXN0ZW06a3ViZS1wcm94eSJdCiAgICB2ZXJiczogWyJ3YXRjaCJdCiAgICByZXNvdXJjZXM6CiAgICAgIC0gZ3JvdXA6ICIiICMgY29yZQogICAgICAgIHJlc291cmNlczogWyJlbmRwb2ludHMiLCAic2VydmljZXMiLCAic2VydmljZXMvc3RhdHVzIl0KICAtIGxldmVsOiBOb25lCiAgICAjIEluZ3Jlc3MgY29udHJvbGxlciByZWFkcyAnY29uZmlnbWFwcy9pbmdyZXNzLXVpZCcgdGhyb3VnaCB0aGUgdW5zZWN1cmVkIHBvcnQuCiAgICB1c2VyczogWyJzeXN0ZW06dW5zZWN1cmVkIl0KICAgIG5hbWVzcGFjZXM6IFsia3ViZS1zeXN0ZW0iXQogICAgdmVyYnM6IFsiZ2V0Il0KICAgIHJlc291cmNlczoKICAgICAgLSBncm91cDogIiIgIyBjb3JlCiAgICAgICAgcmVzb3VyY2VzOiBbImNvbmZpZ21hcHMiXQogIC0gbGV2ZWw6IE5vbmUKICAgIHVzZXJzOiBbImt1YmVsZXQiXSAjIGxlZ2FjeSBrdWJlbGV0IGlkZW50aXR5CiAgICB2ZXJiczogWyJnZXQiXQogICAgcmVzb3VyY2VzOgogICAgICAtIGdyb3VwOiAiIiAjIGNvcmUKICAgICAgICByZXNvdXJjZXM6IFsibm9kZXMiLCAibm9kZXMvc3RhdHVzIl0KICAtIGxldmVsOiBOb25lCiAgICB1c2VyR3JvdXBzOiBbInN5c3RlbTpub2RlcyJdCiAgICB2ZXJiczogWyJnZXQiXQogICAgcmVzb3VyY2VzOgogICAgICAtIGdyb3VwOiAiIiAjIGNvcmUKICAgICAgICByZXNvdXJjZXM6IFsibm9kZXMiLCAibm9kZXMvc3RhdHVzIl0KICAtIGxldmVsOiBOb25lCiAgICB1c2VyczoKICAgICAgLSBzeXN0ZW06a3ViZS1jb250cm9sbGVyLW1hbmFnZXIKICAgICAgLSBzeXN0ZW06a3ViZS1zY2hlZHVsZXIKICAgICAgLSBzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06ZW5kcG9pbnQtY29udHJvbGxlcgogICAgdmVyYnM6IFsiZ2V0IiwgInVwZGF0ZSJdCiAgICBuYW1lc3BhY2VzOiBbImt1YmUtc3lzdGVtIl0KICAgIHJlc291cmNlczoKICAgICAgLSBncm91cDogIiIgIyBjb3JlCiAgICAgICAgcmVzb3VyY2VzOiBbImVuZHBvaW50cyJdCiAgLSBsZXZlbDogTm9uZQogICAgdXNlcnM6IFsic3lzdGVtOmFwaXNlcnZlciJdCiAgICB2ZXJiczogWyJnZXQiXQogICAgcmVzb3VyY2VzOgogICAgICAtIGdyb3VwOiAiIiAjIGNvcmUKICAgICAgICByZXNvdXJjZXM6IFsibmFtZXNwYWNlcyIsICJuYW1lc3BhY2VzL3N0YXR1cyIsICJuYW1lc3BhY2VzL2ZpbmFsaXplIl0KICAtIGxldmVsOiBOb25lCiAgICB1c2VyczogWyJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06Y2x1c3Rlci1hdXRvc2NhbGVyIl0KICAgIHZlcmJzOiBbImdldCIsICJ1cGRhdGUiXQogICAgbmFtZXNwYWNlczogWyJrdWJlLXN5c3RlbSJdCiAgICByZXNvdXJjZXM6CiAgICAgIC0gZ3JvdXA6ICIiICMgY29yZQogICAgICAgIHJlc291cmNlczogWyJjb25maWdtYXBzIiwgImVuZHBvaW50cyJdCiAgIyBEb24ndCBsb2cgSFBBIGZldGNoaW5nIG1ldHJpY3MuCiAgLSBsZXZlbDogTm9uZQogICAgdXNlcnM6CiAgICAgIC0gc3lzdGVtOmt1YmUtY29udHJvbGxlci1tYW5hZ2VyCiAgICB2ZXJiczogWyJnZXQiLCAibGlzdCJdCiAgICByZXNvdXJjZXM6CiAgICAgIC0gZ3JvdXA6ICJtZXRyaWNzLms4cy5pbyIKICAjIERvbid0IGxvZyB0aGVzZSByZWFkLW9ubHkgVVJMcy4KICAtIGxldmVsOiBOb25lCiAgICBub25SZXNvdXJjZVVSTHM6CiAgICAgIC0gL2hlYWx0aHoqCiAgICAgIC0gL3ZlcnNpb24KICAgICAgLSAvc3dhZ2dlcioKICAjIERvbid0IGxvZyBldmVudHMgcmVxdWVzdHMuCiAgLSBsZXZlbDogTm9uZQogICAgcmVzb3VyY2VzOgogICAgICAtIGdyb3VwOiAiIiAjIGNvcmUKICAgICAgICByZXNvdXJjZXM6IFsiZXZlbnRzIl0KICAjIG5vZGUgYW5kIHBvZCBzdGF0dXMgY2FsbHMgZnJvbSBub2RlcyBhcmUgaGlnaC12b2x1bWUgYW5kIGNhbiBiZSBsYXJnZSwgZG9uJ3QgbG9nIHJlc3BvbnNlcyBmb3IgZXhwZWN0ZWQgdXBkYXRlcyBmcm9tIG5vZGVzCiAgLSBsZXZlbDogUmVxdWVzdAogICAgdXNlcnM6CiAgICAgIFsKICAgICAgICAia3ViZWxldCIsCiAgICAgICAgInN5c3RlbTpub2RlLXByb2JsZW0tZGV0ZWN0b3IiLAogICAgICAgICJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06bm9kZS1wcm9ibGVtLWRldGVjdG9yIiwKICAgICAgXQogICAgdmVyYnM6IFsidXBkYXRlIiwgInBhdGNoIl0KICAgIHJlc291cmNlczoKICAgICAgLSBncm91cDogIiIgIyBjb3JlCiAgICAgICAgcmVzb3VyY2VzOiBbIm5vZGVzL3N0YXR1cyIsICJwb2RzL3N0YXR1cyJdCiAgICBvbWl0U3RhZ2VzOgogICAgICAtICJSZXF1ZXN0UmVjZWl2ZWQiCiAgLSBsZXZlbDogUmVxdWVzdAogICAgdXNlckdyb3VwczogWyJzeXN0ZW06bm9kZXMiXQogICAgdmVyYnM6IFsidXBkYXRlIiwgInBhdGNoIl0KICAgIHJlc291cmNlczoKICAgICAgLSBncm91cDogIiIgIyBjb3JlCiAgICAgICAgcmVzb3VyY2VzOiBbIm5vZGVzL3N0YXR1cyIsICJwb2RzL3N0YXR1cyJdCiAgICBvbWl0U3RhZ2VzOgogICAgICAtICJSZXF1ZXN0UmVjZWl2ZWQiCiAgIyBkZWxldGVjb2xsZWN0aW9uIGNhbGxzIGNhbiBiZSBsYXJnZSwgZG9uJ3QgbG9nIHJlc3BvbnNlcyBmb3IgZXhwZWN0ZWQgbmFtZXNwYWNlIGRlbGV0aW9ucwogIC0gbGV2ZWw6IFJlcXVlc3QKICAgIHVzZXJzOiBbInN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTpuYW1lc3BhY2UtY29udHJvbGxlciJdCiAgICB2ZXJiczogWyJkZWxldGVjb2xsZWN0aW9uIl0KICAgIG9taXRTdGFnZXM6CiAgICAgIC0gIlJlcXVlc3RSZWNlaXZlZCIKICAjIFNlY3JldHMsIENvbmZpZ01hcHMsIGFuZCBUb2tlblJldmlld3MgY2FuIGNvbnRhaW4gc2Vuc2l0aXZlICYgYmluYXJ5IGRhdGEsCiAgIyBzbyBvbmx5IGxvZyBhdCB0aGUgTWV0YWRhdGEgbGV2ZWwuCiAgLSBsZXZlbDogTWV0YWRhdGEKICAgIHJlc291cmNlczoKICAgICAgLSBncm91cDogIiIgIyBjb3JlCiAgICAgICAgcmVzb3VyY2VzOiBbInNlY3JldHMiLCAiY29uZmlnbWFwcyJdCiAgICAgIC0gZ3JvdXA6IGF1dGhlbnRpY2F0aW9uLms4cy5pbwogICAgICAgIHJlc291cmNlczogWyJ0b2tlbnJldmlld3MiXQogICAgb21pdFN0YWdlczoKICAgICAgLSAiUmVxdWVzdFJlY2VpdmVkIgogICMgR2V0IHJlcHNvbnNlcyBjYW4gYmUgbGFyZ2U7IHNraXAgdGhlbS4KICAtIGxldmVsOiBSZXF1ZXN0CiAgICB2ZXJiczogWyJnZXQiLCAibGlzdCIsICJ3YXRjaCJdCiAgICByZXNvdXJjZXM6CiAgICAgIC0gZ3JvdXA6ICIiICMgY29yZQogICAgICAtIGdyb3VwOiAiYWRtaXNzaW9ucmVnaXN0cmF0aW9uLms4cy5pbyIKICAgICAgLSBncm91cDogImFwaWV4dGVuc2lvbnMuazhzLmlvIgogICAgICAtIGdyb3VwOiAiYXBpcmVnaXN0cmF0aW9uLms4cy5pbyIKICAgICAgLSBncm91cDogImFwcHMiCiAgICAgIC0gZ3JvdXA6ICJhdXRoZW50aWNhdGlvbi5rOHMuaW8iCiAgICAgIC0gZ3JvdXA6ICJhdXRob3JpemF0aW9uLms4cy5pbyIKICAgICAgLSBncm91cDogImF1dG9zY2FsaW5nIgogICAgICAtIGdyb3VwOiAiYmF0Y2giCiAgICAgIC0gZ3JvdXA6ICJjZXJ0aWZpY2F0ZXMuazhzLmlvIgogICAgICAtIGdyb3VwOiAiZXh0ZW5zaW9ucyIKICAgICAgLSBncm91cDogIm1ldHJpY3MuazhzLmlvIgogICAgICAtIGdyb3VwOiAibmV0d29ya2luZy5rOHMuaW8iCiAgICAgIC0gZ3JvdXA6ICJwb2xpY3kiCiAgICAgIC0gZ3JvdXA6ICJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIgogICAgICAtIGdyb3VwOiAic2NoZWR1bGluZy5rOHMuaW8iCiAgICAgIC0gZ3JvdXA6ICJzZXR0aW5ncy5rOHMuaW8iCiAgICAgIC0gZ3JvdXA6ICJzdG9yYWdlLms4cy5pbyIKICAgIG9taXRTdGFnZXM6CiAgICAgIC0gIlJlcXVlc3RSZWNlaXZlZCIKICAjIERlZmF1bHQgbGV2ZWwgZm9yIGtub3duIEFQSXMKICAtIGxldmVsOiBSZXF1ZXN0UmVzcG9uc2UKICAgIHJlc291cmNlczoKICAgICAgLSBncm91cDogIiIgIyBjb3JlCiAgICAgIC0gZ3JvdXA6ICJhZG1pc3Npb25yZWdpc3RyYXRpb24uazhzLmlvIgogICAgICAtIGdyb3VwOiAiYXBpZXh0ZW5zaW9ucy5rOHMuaW8iCiAgICAgIC0gZ3JvdXA6ICJhcGlyZWdpc3RyYXRpb24uazhzLmlvIgogICAgICAtIGdyb3VwOiAiYXBwcyIKICAgICAgLSBncm91cDogImF1dGhlbnRpY2F0aW9uLms4cy5pbyIKICAgICAgLSBncm91cDogImF1dGhvcml6YXRpb24uazhzLmlvIgogICAgICAtIGdyb3VwOiAiYXV0b3NjYWxpbmciCiAgICAgIC0gZ3JvdXA6ICJiYXRjaCIKICAgICAgLSBncm91cDogImNlcnRpZmljYXRlcy5rOHMuaW8iCiAgICAgIC0gZ3JvdXA6ICJleHRlbnNpb25zIgogICAgICAtIGdyb3VwOiAibWV0cmljcy5rOHMuaW8iCiAgICAgIC0gZ3JvdXA6ICJuZXR3b3JraW5nLms4cy5pbyIKICAgICAgLSBncm91cDogInBvbGljeSIKICAgICAgLSBncm91cDogInJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iCiAgICAgIC0gZ3JvdXA6ICJzY2hlZHVsaW5nLms4cy5pbyIKICAgICAgLSBncm91cDogInNldHRpbmdzLms4cy5pbyIKICAgICAgLSBncm91cDogInN0b3JhZ2UuazhzLmlvIgogICAgb21pdFN0YWdlczoKICAgICAgLSAiUmVxdWVzdFJlY2VpdmVkIgogICMgRGVmYXVsdCBsZXZlbCBmb3IgYWxsIG90aGVyIHJlcXVlc3RzLgogIC0gbGV2ZWw6IE1ldGFkYXRhCiAgICBvbWl0U3RhZ2VzOgogICAgICAtICJSZXF1ZXN0UmVjZWl2ZWQi"}


  - name: kubeadmconfig-audit-policy-file
    match:
      resources:
        kinds:
        - bootstrap.cluster.x-k8s.io/v1alpha3/KubeadmConfig
        - bootstrap.cluster.x-k8s.io/v1alpha4/KubeadmConfig
        - bootstrap.cluster.x-k8s.io/v1beta1/KubeadmConfig
        selector:
          matchLabels:
            cluster.x-k8s.io/watch-filter: capi
    preconditions:
      any:
      - key: "/etc/kubernetes/policies/audit-policy.yaml"
        operator: NotIn
        value: "{{ `{{` }}request.object.spec.files[].path{{ `}}` }}"
    mutate:
      patchesJson6902: |-
        - op: add
          path: "/spec/files/-"
          value: {"encoding":"base64","owner":"root","path":"/etc/kubernetes/policies/audit-policy.yaml","permissions":"644","content":"YXBpVmVyc2lvbjogYXVkaXQuazhzLmlvL3YxCmtpbmQ6IFBvbGljeQpydWxlczoKICAjIFRoZSBmb2xsb3dpbmcgcmVxdWVzdHMgd2VyZSBtYW51YWxseSBpZGVudGlmaWVkIGFzIGhpZ2gtdm9sdW1lIGFuZCBsb3ctcmlzaywKICAjIHNvIGRyb3AgdGhlbS4KICAtIGxldmVsOiBOb25lCiAgICB1c2VyczogWyJzeXN0ZW06a3ViZS1wcm94eSJdCiAgICB2ZXJiczogWyJ3YXRjaCJdCiAgICByZXNvdXJjZXM6CiAgICAgIC0gZ3JvdXA6ICIiICMgY29yZQogICAgICAgIHJlc291cmNlczogWyJlbmRwb2ludHMiLCAic2VydmljZXMiLCAic2VydmljZXMvc3RhdHVzIl0KICAtIGxldmVsOiBOb25lCiAgICAjIEluZ3Jlc3MgY29udHJvbGxlciByZWFkcyAnY29uZmlnbWFwcy9pbmdyZXNzLXVpZCcgdGhyb3VnaCB0aGUgdW5zZWN1cmVkIHBvcnQuCiAgICB1c2VyczogWyJzeXN0ZW06dW5zZWN1cmVkIl0KICAgIG5hbWVzcGFjZXM6IFsia3ViZS1zeXN0ZW0iXQogICAgdmVyYnM6IFsiZ2V0Il0KICAgIHJlc291cmNlczoKICAgICAgLSBncm91cDogIiIgIyBjb3JlCiAgICAgICAgcmVzb3VyY2VzOiBbImNvbmZpZ21hcHMiXQogIC0gbGV2ZWw6IE5vbmUKICAgIHVzZXJzOiBbImt1YmVsZXQiXSAjIGxlZ2FjeSBrdWJlbGV0IGlkZW50aXR5CiAgICB2ZXJiczogWyJnZXQiXQogICAgcmVzb3VyY2VzOgogICAgICAtIGdyb3VwOiAiIiAjIGNvcmUKICAgICAgICByZXNvdXJjZXM6IFsibm9kZXMiLCAibm9kZXMvc3RhdHVzIl0KICAtIGxldmVsOiBOb25lCiAgICB1c2VyR3JvdXBzOiBbInN5c3RlbTpub2RlcyJdCiAgICB2ZXJiczogWyJnZXQiXQogICAgcmVzb3VyY2VzOgogICAgICAtIGdyb3VwOiAiIiAjIGNvcmUKICAgICAgICByZXNvdXJjZXM6IFsibm9kZXMiLCAibm9kZXMvc3RhdHVzIl0KICAtIGxldmVsOiBOb25lCiAgICB1c2VyczoKICAgICAgLSBzeXN0ZW06a3ViZS1jb250cm9sbGVyLW1hbmFnZXIKICAgICAgLSBzeXN0ZW06a3ViZS1zY2hlZHVsZXIKICAgICAgLSBzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06ZW5kcG9pbnQtY29udHJvbGxlcgogICAgdmVyYnM6IFsiZ2V0IiwgInVwZGF0ZSJdCiAgICBuYW1lc3BhY2VzOiBbImt1YmUtc3lzdGVtIl0KICAgIHJlc291cmNlczoKICAgICAgLSBncm91cDogIiIgIyBjb3JlCiAgICAgICAgcmVzb3VyY2VzOiBbImVuZHBvaW50cyJdCiAgLSBsZXZlbDogTm9uZQogICAgdXNlcnM6IFsic3lzdGVtOmFwaXNlcnZlciJdCiAgICB2ZXJiczogWyJnZXQiXQogICAgcmVzb3VyY2VzOgogICAgICAtIGdyb3VwOiAiIiAjIGNvcmUKICAgICAgICByZXNvdXJjZXM6IFsibmFtZXNwYWNlcyIsICJuYW1lc3BhY2VzL3N0YXR1cyIsICJuYW1lc3BhY2VzL2ZpbmFsaXplIl0KICAtIGxldmVsOiBOb25lCiAgICB1c2VyczogWyJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06Y2x1c3Rlci1hdXRvc2NhbGVyIl0KICAgIHZlcmJzOiBbImdldCIsICJ1cGRhdGUiXQogICAgbmFtZXNwYWNlczogWyJrdWJlLXN5c3RlbSJdCiAgICByZXNvdXJjZXM6CiAgICAgIC0gZ3JvdXA6ICIiICMgY29yZQogICAgICAgIHJlc291cmNlczogWyJjb25maWdtYXBzIiwgImVuZHBvaW50cyJdCiAgIyBEb24ndCBsb2cgSFBBIGZldGNoaW5nIG1ldHJpY3MuCiAgLSBsZXZlbDogTm9uZQogICAgdXNlcnM6CiAgICAgIC0gc3lzdGVtOmt1YmUtY29udHJvbGxlci1tYW5hZ2VyCiAgICB2ZXJiczogWyJnZXQiLCAibGlzdCJdCiAgICByZXNvdXJjZXM6CiAgICAgIC0gZ3JvdXA6ICJtZXRyaWNzLms4cy5pbyIKICAjIERvbid0IGxvZyB0aGVzZSByZWFkLW9ubHkgVVJMcy4KICAtIGxldmVsOiBOb25lCiAgICBub25SZXNvdXJjZVVSTHM6CiAgICAgIC0gL2hlYWx0aHoqCiAgICAgIC0gL3ZlcnNpb24KICAgICAgLSAvc3dhZ2dlcioKICAjIERvbid0IGxvZyBldmVudHMgcmVxdWVzdHMuCiAgLSBsZXZlbDogTm9uZQogICAgcmVzb3VyY2VzOgogICAgICAtIGdyb3VwOiAiIiAjIGNvcmUKICAgICAgICByZXNvdXJjZXM6IFsiZXZlbnRzIl0KICAjIG5vZGUgYW5kIHBvZCBzdGF0dXMgY2FsbHMgZnJvbSBub2RlcyBhcmUgaGlnaC12b2x1bWUgYW5kIGNhbiBiZSBsYXJnZSwgZG9uJ3QgbG9nIHJlc3BvbnNlcyBmb3IgZXhwZWN0ZWQgdXBkYXRlcyBmcm9tIG5vZGVzCiAgLSBsZXZlbDogUmVxdWVzdAogICAgdXNlcnM6CiAgICAgIFsKICAgICAgICAia3ViZWxldCIsCiAgICAgICAgInN5c3RlbTpub2RlLXByb2JsZW0tZGV0ZWN0b3IiLAogICAgICAgICJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06bm9kZS1wcm9ibGVtLWRldGVjdG9yIiwKICAgICAgXQogICAgdmVyYnM6IFsidXBkYXRlIiwgInBhdGNoIl0KICAgIHJlc291cmNlczoKICAgICAgLSBncm91cDogIiIgIyBjb3JlCiAgICAgICAgcmVzb3VyY2VzOiBbIm5vZGVzL3N0YXR1cyIsICJwb2RzL3N0YXR1cyJdCiAgICBvbWl0U3RhZ2VzOgogICAgICAtICJSZXF1ZXN0UmVjZWl2ZWQiCiAgLSBsZXZlbDogUmVxdWVzdAogICAgdXNlckdyb3VwczogWyJzeXN0ZW06bm9kZXMiXQogICAgdmVyYnM6IFsidXBkYXRlIiwgInBhdGNoIl0KICAgIHJlc291cmNlczoKICAgICAgLSBncm91cDogIiIgIyBjb3JlCiAgICAgICAgcmVzb3VyY2VzOiBbIm5vZGVzL3N0YXR1cyIsICJwb2RzL3N0YXR1cyJdCiAgICBvbWl0U3RhZ2VzOgogICAgICAtICJSZXF1ZXN0UmVjZWl2ZWQiCiAgIyBkZWxldGVjb2xsZWN0aW9uIGNhbGxzIGNhbiBiZSBsYXJnZSwgZG9uJ3QgbG9nIHJlc3BvbnNlcyBmb3IgZXhwZWN0ZWQgbmFtZXNwYWNlIGRlbGV0aW9ucwogIC0gbGV2ZWw6IFJlcXVlc3QKICAgIHVzZXJzOiBbInN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTpuYW1lc3BhY2UtY29udHJvbGxlciJdCiAgICB2ZXJiczogWyJkZWxldGVjb2xsZWN0aW9uIl0KICAgIG9taXRTdGFnZXM6CiAgICAgIC0gIlJlcXVlc3RSZWNlaXZlZCIKICAjIFNlY3JldHMsIENvbmZpZ01hcHMsIGFuZCBUb2tlblJldmlld3MgY2FuIGNvbnRhaW4gc2Vuc2l0aXZlICYgYmluYXJ5IGRhdGEsCiAgIyBzbyBvbmx5IGxvZyBhdCB0aGUgTWV0YWRhdGEgbGV2ZWwuCiAgLSBsZXZlbDogTWV0YWRhdGEKICAgIHJlc291cmNlczoKICAgICAgLSBncm91cDogIiIgIyBjb3JlCiAgICAgICAgcmVzb3VyY2VzOiBbInNlY3JldHMiLCAiY29uZmlnbWFwcyJdCiAgICAgIC0gZ3JvdXA6IGF1dGhlbnRpY2F0aW9uLms4cy5pbwogICAgICAgIHJlc291cmNlczogWyJ0b2tlbnJldmlld3MiXQogICAgb21pdFN0YWdlczoKICAgICAgLSAiUmVxdWVzdFJlY2VpdmVkIgogICMgR2V0IHJlcHNvbnNlcyBjYW4gYmUgbGFyZ2U7IHNraXAgdGhlbS4KICAtIGxldmVsOiBSZXF1ZXN0CiAgICB2ZXJiczogWyJnZXQiLCAibGlzdCIsICJ3YXRjaCJdCiAgICByZXNvdXJjZXM6CiAgICAgIC0gZ3JvdXA6ICIiICMgY29yZQogICAgICAtIGdyb3VwOiAiYWRtaXNzaW9ucmVnaXN0cmF0aW9uLms4cy5pbyIKICAgICAgLSBncm91cDogImFwaWV4dGVuc2lvbnMuazhzLmlvIgogICAgICAtIGdyb3VwOiAiYXBpcmVnaXN0cmF0aW9uLms4cy5pbyIKICAgICAgLSBncm91cDogImFwcHMiCiAgICAgIC0gZ3JvdXA6ICJhdXRoZW50aWNhdGlvbi5rOHMuaW8iCiAgICAgIC0gZ3JvdXA6ICJhdXRob3JpemF0aW9uLms4cy5pbyIKICAgICAgLSBncm91cDogImF1dG9zY2FsaW5nIgogICAgICAtIGdyb3VwOiAiYmF0Y2giCiAgICAgIC0gZ3JvdXA6ICJjZXJ0aWZpY2F0ZXMuazhzLmlvIgogICAgICAtIGdyb3VwOiAiZXh0ZW5zaW9ucyIKICAgICAgLSBncm91cDogIm1ldHJpY3MuazhzLmlvIgogICAgICAtIGdyb3VwOiAibmV0d29ya2luZy5rOHMuaW8iCiAgICAgIC0gZ3JvdXA6ICJwb2xpY3kiCiAgICAgIC0gZ3JvdXA6ICJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIgogICAgICAtIGdyb3VwOiAic2NoZWR1bGluZy5rOHMuaW8iCiAgICAgIC0gZ3JvdXA6ICJzZXR0aW5ncy5rOHMuaW8iCiAgICAgIC0gZ3JvdXA6ICJzdG9yYWdlLms4cy5pbyIKICAgIG9taXRTdGFnZXM6CiAgICAgIC0gIlJlcXVlc3RSZWNlaXZlZCIKICAjIERlZmF1bHQgbGV2ZWwgZm9yIGtub3duIEFQSXMKICAtIGxldmVsOiBSZXF1ZXN0UmVzcG9uc2UKICAgIHJlc291cmNlczoKICAgICAgLSBncm91cDogIiIgIyBjb3JlCiAgICAgIC0gZ3JvdXA6ICJhZG1pc3Npb25yZWdpc3RyYXRpb24uazhzLmlvIgogICAgICAtIGdyb3VwOiAiYXBpZXh0ZW5zaW9ucy5rOHMuaW8iCiAgICAgIC0gZ3JvdXA6ICJhcGlyZWdpc3RyYXRpb24uazhzLmlvIgogICAgICAtIGdyb3VwOiAiYXBwcyIKICAgICAgLSBncm91cDogImF1dGhlbnRpY2F0aW9uLms4cy5pbyIKICAgICAgLSBncm91cDogImF1dGhvcml6YXRpb24uazhzLmlvIgogICAgICAtIGdyb3VwOiAiYXV0b3NjYWxpbmciCiAgICAgIC0gZ3JvdXA6ICJiYXRjaCIKICAgICAgLSBncm91cDogImNlcnRpZmljYXRlcy5rOHMuaW8iCiAgICAgIC0gZ3JvdXA6ICJleHRlbnNpb25zIgogICAgICAtIGdyb3VwOiAibWV0cmljcy5rOHMuaW8iCiAgICAgIC0gZ3JvdXA6ICJuZXR3b3JraW5nLms4cy5pbyIKICAgICAgLSBncm91cDogInBvbGljeSIKICAgICAgLSBncm91cDogInJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iCiAgICAgIC0gZ3JvdXA6ICJzY2hlZHVsaW5nLms4cy5pbyIKICAgICAgLSBncm91cDogInNldHRpbmdzLms4cy5pbyIKICAgICAgLSBncm91cDogInN0b3JhZ2UuazhzLmlvIgogICAgb21pdFN0YWdlczoKICAgICAgLSAiUmVxdWVzdFJlY2VpdmVkIgogICMgRGVmYXVsdCBsZXZlbCBmb3IgYWxsIG90aGVyIHJlcXVlc3RzLgogIC0gbGV2ZWw6IE1ldGFkYXRhCiAgICBvbWl0U3RhZ2VzOgogICAgICAtICJSZXF1ZXN0UmVjZWl2ZWQi"}
